// ABOUTME: Main content view for macOS app
// ABOUTME: Displays Hello World with system info and interactive features

import SwiftUI

struct ContentView: View {
    @State private var tapCount = 0
    @State private var showingAbout = false
    @State private var systemInfo = ""
    
    var body: some View {
        VStack(spacing: 30) {
            Text("Hello, World!")
                .font(.largeTitle)
                .fontWeight(.bold)
            
            Text("Running on macOS")
                .font(.title3)
                .foregroundColor(.secondary)
            
            Divider()
                .frame(width: 200)
            
            VStack(spacing: 15) {
                Text("Tap count: \(tapCount)")
                    .font(.title2)
                    .monospacedDigit()
                
                HStack(spacing: 20) {
                    Button(action: {
                        tapCount += 1
                    }) {
                        Label("Tap me!", systemImage: "hand.tap")
                            .frame(width: 120)
                    }
                    .controlSize(.large)
                    .buttonStyle(.borderedProminent)
                    
                    Button(action: {
                        tapCount = 0
                    }) {
                        Label("Reset", systemImage: "arrow.counterclockwise")
                            .frame(width: 120)
                    }
                    .controlSize(.large)
                    .buttonStyle(.bordered)
                }
            }
            
            Divider()
                .frame(width: 200)
            
            VStack(spacing: 10) {
                Button(action: {
                    systemInfo = getSystemInfo()
                }) {
                    Label("Show System Info", systemImage: "info.circle")
                }
                .buttonStyle(.link)
                
                if !systemInfo.isEmpty {
                    Text(systemInfo)
                        .font(.caption)
                        .foregroundColor(.secondary)
                        .padding(10)
                        .background(Color.gray.opacity(0.1))
                        .cornerRadius(5)
                }
            }
            
            Spacer()
            
            Button(action: {
                showingAbout = true
            }) {
                Text("About {{PROJECT_NAME}}")
                    .font(.caption)
            }
            .buttonStyle(.link)
        }
        .padding(40)
        .frame(minWidth: 500, minHeight: 400)
        .sheet(isPresented: $showingAbout) {
            AboutView()
        }
    }
    
    func getSystemInfo() -> String {
        let osVersion = ProcessInfo.processInfo.operatingSystemVersion
        let processor = getProcessorInfo()
        let memory = getMemoryInfo()
        
        return """
        macOS \(osVersion.majorVersion).\(osVersion.minorVersion).\(osVersion.patchVersion)
        Processor: \(processor)
        Memory: \(memory)
        """
    }
    
    func getProcessorInfo() -> String {
        var size = 0
        sysctlbyname("machdep.cpu.brand_string", nil, &size, nil, 0)
        var processor = [CChar](repeating: 0, count: size)
        sysctlbyname("machdep.cpu.brand_string", &processor, &size, nil, 0)
        return String(cString: processor)
    }
    
    func getMemoryInfo() -> String {
        let physicalMemory = ProcessInfo.processInfo.physicalMemory
        let formatter = ByteCountFormatter()
        formatter.countStyle = .memory
        return formatter.string(fromByteCount: Int64(physicalMemory))
    }
}

struct AboutView: View {
    @Environment(\.dismiss) var dismiss
    
    var body: some View {
        VStack(spacing: 20) {
            Image(systemName: "app.badge")
                .font(.system(size: 60))
                .foregroundColor(.blue)
            
            Text("{{PROJECT_NAME}}")
                .font(.largeTitle)
                .fontWeight(.bold)
            
            Text("Version 1.0")
                .font(.title3)
                .foregroundColor(.secondary)
            
            Divider()
                .frame(width: 200)
            
            Text("A Hello World app built with Claude Code")
                .font(.body)
            
            Text("Â© 2025 - Built for CLI-driven development")
                .font(.caption)
                .foregroundColor(.secondary)
            
            Button("Close") {
                dismiss()
            }
            .buttonStyle(.borderedProminent)
            .controlSize(.large)
        }
        .padding(40)
        .frame(width: 400, height: 350)
    }
}

struct ContentView_Previews: PreviewProvider {
    static var previews: some View {
        ContentView()
    }
}