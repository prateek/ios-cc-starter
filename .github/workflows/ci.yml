# ABOUTME: CI workflow for the iOS/macOS Claude Code Starter template repository
# ABOUTME: Tests generator scripts, validates templates, and ensures project generation works

name: Template CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test-generator:
    name: Test Project Generator
    runs-on: macos-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Setup Environment
      run: |
        echo "Setting up test environment..."
        # Ensure jq is installed for JSON parsing
        brew install jq || true
        
    - name: Check Script Permissions
      run: |
        echo "Checking script permissions..."
        ls -la scripts/*.sh
        ls -la tests/*.sh
        ls -la setup.sh
        
    - name: Make Scripts Executable
      run: |
        chmod +x scripts/*.sh
        chmod +x tests/*.sh
        chmod +x setup.sh
        
    - name: Run Generator Tests
      run: |
        echo "Running generator tests..."
        ./tests/test_generator.sh
        
    - name: Upload Test Results
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: test_output/

  validate-templates:
    name: Validate Templates
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Check Template Files
      run: |
        echo "Checking template files exist..."
        test -f templates/CLAUDE.md.template
        test -f templates/test.yml.template
        test -f templates/.gitignore.template
        test -d templates/ios
        test -d templates/macos
        
    - name: Validate No Unsubstituted Placeholders in Scripts
      run: |
        echo "Checking for incomplete template substitutions in scripts..."
        # Check that scripts don't contain template placeholders
        if grep -r "{{.*}}" scripts/ --include="*.sh"; then
          echo "Error: Found unsubstituted template placeholders in scripts"
          exit 1
        fi
        
    - name: Check Template Placeholders
      run: |
        echo "Validating template placeholders are consistent..."
        # List all unique placeholders
        echo "Placeholders found in templates:"
        grep -ho "{{[^}]*}}" templates/ -r | sort -u
        
  test-sample-generation:
    name: Test Sample Project Generation
    runs-on: macos-latest
    needs: [test-generator, validate-templates]
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Install Dependencies
      run: |
        brew install jq || true
        
    - name: Make Scripts Executable
      run: |
        chmod +x scripts/*.sh
        chmod +x setup.sh
        
    - name: Generate Sample Project
      run: |
        echo "Generating sample project with default configuration..."
        # Create a sample config
        cat > test.config.json << 'EOF'
        {
          "projectName": "CITestApp",
          "bundleId": "com.ci.testapp",
          "displayName": "CI Test App",
          "platforms": ["ios", "macos"],
          "uiFramework": "SwiftUI",
          "iosConfig": {
            "minVersion": "17.0",
            "deviceFamily": "universal"
          },
          "macosConfig": {
            "minVersion": "14.0"
          },
          "includeCI": true,
          "includeTests": true
        }
        EOF
        
        # Generate the project
        cp test.config.json project.config.json
        ./scripts/generate_project.sh ci_test_output
        
    - name: Validate Generated Project Structure
      run: |
        echo "Validating generated project structure..."
        # Check key files exist
        test -f ci_test_output/CITestApp/Makefile
        test -f ci_test_output/CITestApp/.gitignore
        test -f ci_test_output/CITestApp/README.md
        test -d ci_test_output/CITestApp/.claude
        test -f ci_test_output/CITestApp/.claude/CLAUDE.md
        test -f ci_test_output/CITestApp/.claude/settings.local.json
        test -d ci_test_output/CITestApp/.github/workflows
        test -f ci_test_output/CITestApp/.github/workflows/test.yml
        
        # Check no template placeholders remain
        if grep -r "{{.*}}" ci_test_output/ --exclude-dir=.git; then
          echo "Error: Found unsubstituted template placeholders in generated project"
          exit 1
        fi
        
        echo "✅ Generated project structure is valid"
        
    - name: Upload Generated Project
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: generated-project
        path: ci_test_output/

  validate-json-configs:
    name: Validate JSON Configurations
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Validate sample.config.json
      run: |
        echo "Validating sample.config.json..."
        jq empty sample.config.json
        echo "✅ sample.config.json is valid JSON"
        
    - name: Validate .claude/settings.local.json
      run: |
        echo "Validating .claude/settings.local.json..."
        jq empty .claude/settings.local.json
        echo "✅ .claude/settings.local.json is valid JSON"
        
    - name: Check Required Fields in Sample Config
      run: |
        echo "Checking required fields in sample.config.json..."
        jq -e '.projectName' sample.config.json > /dev/null
        jq -e '.bundleId' sample.config.json > /dev/null
        jq -e '.platforms' sample.config.json > /dev/null
        echo "✅ All required fields present"

  shellcheck:
    name: Shell Script Linting
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Run ShellCheck on Scripts
      uses: ludeeus/action-shellcheck@2.0.0
      with:
        scandir: './scripts'
        severity: warning
        
    - name: Run ShellCheck on Setup Script
      uses: ludeeus/action-shellcheck@2.0.0
      with:
        scandir: '.'
        additional_files: 'setup.sh'
        severity: warning
        
    - name: Run ShellCheck on Test Scripts
      uses: ludeeus/action-shellcheck@2.0.0
      with:
        scandir: './tests'
        severity: warning

  documentation:
    name: Validate Documentation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Check README Exists
      run: test -f README.md
      
    - name: Check Key Documentation Sections
      run: |
        echo "Checking README contains key sections..."
        grep -q "## Quick Start" README.md
        grep -q "## Features" README.md
        grep -q "## Requirements" README.md
        echo "✅ Key documentation sections present"
        
    - name: Validate Links in README
      run: |
        echo "Checking for broken markdown links..."
        # Basic check for markdown link syntax
        if grep -E '\[.*\]\(.*\)' README.md | grep -v 'http'; then
          echo "Found local links in README - verifying..."
          # Could add more sophisticated link checking here
        fi

  all-tests-pass:
    name: All Tests Pass
    runs-on: ubuntu-latest
    needs: [test-generator, validate-templates, test-sample-generation, validate-json-configs, shellcheck, documentation]
    
    steps:
    - name: Summary
      run: |
        echo "✅ All CI checks passed successfully!"
        echo "The template generator is working correctly."