name: {{PROJECT_NAME}} CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  XCODE_VERSION: '15.4'
  IOS_SIMULATOR: 'iPhone 16'
  MACOS_DESTINATION: 'platform=macOS'

jobs:
  test-ios:
    name: iOS Tests
    runs-on: macos-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode_${{ env.XCODE_VERSION }}.app
      
    - name: Show available simulators
      run: xcrun simctl list devices
      
    - name: Build iOS App
      run: |
        xcodebuild build \
          -project {{PROJECT_NAME}}.xcodeproj \
          -scheme {{PROJECT_NAME}} \
          -destination "platform=iOS Simulator,name=${{ env.IOS_SIMULATOR }}" \
          -configuration Debug \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO
          
    - name: Run iOS Unit Tests
      run: |
        xcodebuild test \
          -project {{PROJECT_NAME}}.xcodeproj \
          -scheme {{PROJECT_NAME}} \
          -destination "platform=iOS Simulator,name=${{ env.IOS_SIMULATOR }}" \
          -configuration Debug \
          -enableCodeCoverage YES \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO
          
    - name: Run iOS UI Tests
      run: |
        xcodebuild test \
          -project {{PROJECT_NAME}}.xcodeproj \
          -scheme {{PROJECT_NAME}}UITests \
          -destination "platform=iOS Simulator,name=${{ env.IOS_SIMULATOR }}" \
          -configuration Debug \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO
          
    - name: Upload iOS Test Results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: ios-test-results
        path: |
          ~/Library/Developer/Xcode/DerivedData/**/Logs/Test/*.xcresult

  test-macos:
    name: macOS Tests
    runs-on: macos-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode_${{ env.XCODE_VERSION }}.app
      
    - name: Build macOS App
      run: |
        xcodebuild build \
          -project {{PROJECT_NAME}}.xcodeproj \
          -scheme {{PROJECT_NAME}}Mac \
          -destination "${{ env.MACOS_DESTINATION }}" \
          -configuration Debug
          
    - name: Run macOS Unit Tests
      run: |
        xcodebuild test \
          -project {{PROJECT_NAME}}.xcodeproj \
          -scheme {{PROJECT_NAME}}Mac \
          -destination "${{ env.MACOS_DESTINATION }}" \
          -configuration Debug \
          -enableCodeCoverage YES
          
    - name: Run macOS UI Tests
      run: |
        xcodebuild test \
          -project {{PROJECT_NAME}}.xcodeproj \
          -scheme {{PROJECT_NAME}}MacUITests \
          -destination "${{ env.MACOS_DESTINATION }}" \
          -configuration Debug
          
    - name: Upload macOS Test Results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: macos-test-results
        path: |
          ~/Library/Developer/Xcode/DerivedData/**/Logs/Test/*.xcresult

  code-coverage:
    name: Code Coverage
    runs-on: macos-latest
    needs: [test-ios, test-macos]
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode_${{ env.XCODE_VERSION }}.app
      
    - name: Generate Coverage Report
      run: |
        xcodebuild test \
          -project {{PROJECT_NAME}}.xcodeproj \
          -scheme {{PROJECT_NAME}} \
          -destination "platform=iOS Simulator,name=${{ env.IOS_SIMULATOR }}" \
          -enableCodeCoverage YES \
          -resultBundlePath TestResults \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO
          
    - name: Convert Coverage to lcov
      run: |
        xcrun xccov view --report --json TestResults.xcresult > coverage.json
        # Convert to lcov format if needed
        
    - name: Upload Coverage Reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.json
        flags: unittests
        name: codecov-{{PROJECT_NAME}}

  lint:
    name: Swift Lint
    runs-on: macos-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Install SwiftLint
      run: brew install swiftlint
      
    - name: Run SwiftLint
      run: swiftlint lint --reporter github-actions-logging

  build-release:
    name: Build Release
    runs-on: macos-latest
    if: github.ref == 'refs/heads/main'
    needs: [test-ios, test-macos]
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode_${{ env.XCODE_VERSION }}.app
      
    - name: Build iOS Release
      run: |
        xcodebuild archive \
          -project {{PROJECT_NAME}}.xcodeproj \
          -scheme {{PROJECT_NAME}} \
          -archivePath build/{{PROJECT_NAME}}-iOS.xcarchive \
          -destination "generic/platform=iOS" \
          -configuration Release \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO
          
    - name: Build macOS Release
      run: |
        xcodebuild archive \
          -project {{PROJECT_NAME}}.xcodeproj \
          -scheme {{PROJECT_NAME}}Mac \
          -archivePath build/{{PROJECT_NAME}}-macOS.xcarchive \
          -configuration Release
          
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: release-builds
        path: build/*.xcarchive